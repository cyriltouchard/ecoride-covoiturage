version: '3.8'

services:
  # Application EcoRide
  ecoride-app:
    build: .
    container_name: ecoride-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://ecoride-mongo:27017/ecoride
      - MYSQL_HOST=ecoride-mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=ecoride
      - MYSQL_USER=ecoride_user
      - MYSQL_PASSWORD=ecoride_secure_password
      - JWT_SECRET=your_super_secret_jwt_key_change_in_production
    depends_on:
      ecoride-mongo:
        condition: service_healthy
      ecoride-mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ecoride-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de données MongoDB
  ecoride-mongo:
    image: mongo:7.0-alpine
    container_name: ecoride-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin_password
      - MONGO_INITDB_DATABASE=ecoride
    volumes:
      - ecoride_mongo_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - ecoride-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Base de données MySQL
  ecoride-mysql:
    image: mysql:8.0
    container_name: ecoride-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_secure_password
      - MYSQL_DATABASE=ecoride
      - MYSQL_USER=ecoride_user
      - MYSQL_PASSWORD=ecoride_secure_password
    volumes:
      - ecoride_mysql_data:/var/lib/mysql
      - ./docker/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - ecoride-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Interface d'administration MongoDB (optionnel)
  mongo-express:
    image: mongo-express:latest
    container_name: ecoride-mongo-admin
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin_password
      - ME_CONFIG_MONGODB_URL=mongodb://admin:admin_password@ecoride-mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - ecoride-mongo
    restart: unless-stopped
    networks:
      - ecoride-network

  # Interface d'administration MySQL (optionnel)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ecoride-mysql-admin
    ports:
      - "8082:80"
    environment:
      - PMA_HOST=ecoride-mysql
      - PMA_PORT=3306
      - PMA_USER=ecoride_user
      - PMA_PASSWORD=ecoride_secure_password
      - MYSQL_ROOT_PASSWORD=root_secure_password
    depends_on:
      - ecoride-mysql
    restart: unless-stopped
    networks:
      - ecoride-network

networks:
  ecoride-network:
    driver: bridge
    name: ecoride-network

volumes:
  ecoride_mongo_data:
    name: ecoride_mongo_data
  ecoride_mysql_data:
    name: ecoride_mysql_data